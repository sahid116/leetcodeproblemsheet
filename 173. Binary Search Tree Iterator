class BSTIterator {
    stack<TreeNode*>stack;
    void pushAll(TreeNode* node){
        while(node!=NULL){
            stack.push(node);
            node=node->left;
        }
    }
public:
    BSTIterator(TreeNode* root) {
        pushAll(root);
    }
    
    int next() {
        TreeNode* top=stack.top();
        stack.pop();
         
        pushAll(top->right);
        return top->val;
       
    }
    
    bool hasNext() {
        return !stack.empty();
    }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */
